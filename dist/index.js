import{Data as b,fromHex as oe,mintingPolicyToId as M,selectUTxOs as V}from"@lucid-evolution/lucid";import{validatorToAddress as R}from"@lucid-evolution/lucid";var f=(e,t)=>{let r={type:"PlutusV2",script:t.minting},o=e.config().network,n=R(o,r),s={type:"PlutusV2",script:t.spending},i=R(o,s);return{spendServiceValidator:s,spendServiceValAddress:i,mintServiceValidator:r,mintServiceValAddress:n}};import{applyDoubleCborEncoding as j,Constr as p,Data as q,generateSeedPhrase as K,getAddressDetails as U,Lucid as F,addAssets as Y,Emulator as W,validatorToAddress as k,keyHashToCredential as _,scriptHashToCredential as E,credentialToAddress as J}from"@lucid-evolution/lucid";function Ce(e){return{type:"ok",data:e}}var z=async(e,t,r)=>{let o=e.config().network,n={type:"PlutusV2",script:t},s=r?k(o,n,_(r)):k(o,n);return e.utxosAt(s)},G=(e,t)=>{if(e)try{return{type:"right",value:q.from(e,t)}}catch(r){return{type:"left",value:`invalid datum : ${r}`}}else return{type:"left",value:"missing datum"}},be=async(e,t,r,o)=>{try{return(await z(e,t,o)).flatMap(s=>{let i=G(s.datum,r);return i.type=="right"?{outRef:{txHash:s.txHash,outputIndex:s.outputIndex},datum:i.value,assets:s.assets}:[]})}catch{return[]}},we=e=>j(e),Re=async e=>{let t=K(),r=await F(new W([]),"Custom");r.selectWallet.fromSeed(t);let o=r.wallet().address;return{seedPhrase:t,address:o,assets:e}};function ke(e){let{paymentCredential:t,stakeCredential:r}=U(e);if(!t)throw new Error("Not a valid payment address.");return{paymentCredential:t?.type==="Key"?{PublicKeyCredential:[t.hash]}:{ScriptCredential:[t.hash]},stakeCredential:r?{Inline:[r.type==="Key"?{PublicKeyCredential:[r.hash]}:{ScriptCredential:[r.hash]}]}:null}}function Ee(e,t){let r=(()=>"PublicKeyCredential"in e.paymentCredential?_(e.paymentCredential.PublicKeyCredential[0]):E(e.paymentCredential.ScriptCredential[0]))(),o=(()=>{if(e.stakeCredential&&"Inline"in e.stakeCredential)return"PublicKeyCredential"in e.stakeCredential.Inline[0]?_(e.stakeCredential.Inline[0].PublicKeyCredential[0]):E(e.stakeCredential.Inline[0].ScriptCredential[0])})();return J(t,r,o)}var Ue=e=>{let t=U(e);if(!t.paymentCredential)return{type:"error",error:new Error("undefined paymentCredential")};let r=t.paymentCredential.type=="Key"?new p(0,[t.paymentCredential.hash]):new p(1,[t.paymentCredential.hash]);if(!t.stakeCredential)return{type:"ok",data:new p(0,[r,new p(1,[])])};let o=new p(0,[new p(0,[new p(0,[t.stakeCredential.hash])])]);return{type:"ok",data:new p(0,[r,o])}},Ie=(e,t)=>{let r=Math.ceil(e.length/t);return[...Array(r)].map((o,n)=>e.slice(n*t,(n+1)*t))},De=(e,t)=>typeof t=="bigint"?t.toString():t,Ne=(e,t)=>1n+(e-1n)/t;function Ve(e,t){let r=Object.entries(t),o={...e};return r.forEach(([n,s])=>{o[n]?o[n]+=s:o[n]=s}),o}function Me(e){let t=new Map;e.lovelace&&t.set("",new Map([["",e.lovelace]]));let r=Object.keys(e);return Array.from(new Set(r.filter(n=>n!=="lovelace").map(n=>n.slice(0,56)))).sort().forEach(n=>{let s=r.filter(c=>c.slice(0,56)===n),i=new Map;s.sort().forEach(c=>{i.set(c.slice(56),e[c])}),t.set(n,i)}),t}function Pe(e){let t={lovelace:e.get("")?.get("")||BigInt(0)};for(let[r,o]of e)if(r!=="")for(let[n,s]of o)t[r+n]=s;return t}function Be(e,t){let r=[],o=!1,n=new Map(Object.entries(t));for(let s of e)if(!s.scriptRef){o=!1;for(let[i,c]of n)if(Object.hasOwn(s.assets,i)){let d=s.assets[i];d>=c?n.delete(i):n.set(i,c-d),o=!0}if(o&&r.push(s),n.size==0)break}return n.size>0?{type:"error",error:new Error("Insufficient funds")}:{type:"ok",data:r}}function Le(e,t){let r=e.concat(t),o=Q(r),n=new Map;return o.forEach((s,i)=>{n.set(s.txHash+s.outputIndex,BigInt(i))}),e.flatMap(s=>{let i=n.get(s.txHash+s.outputIndex);return i!==void 0?i:[]})}function Q(e){return e.sort((t,r)=>t.txHash<r.txHash?-1:t.txHash>r.txHash?1:t.txHash==r.txHash?t.outputIndex<r.outputIndex?-1:1:0)}function He(e){return e.map(t=>t.assets).reduce((t,r)=>Y(t,r),{})}function $e(e,t){for(let[r,o]of Object.entries(t))Object.hasOwn(e,r)&&(e[r]<o?delete e[r]:e[r]>o?e[r]-=o:delete e[r]);return e}import{Data as a}from"@lucid-evolution/lucid";var I=a.Object({txHash:a.Object({hash:a.Bytes({minLength:32,maxLength:32})}),outputIndex:a.Integer()}),ze=I,h=a.Enum([a.Object({PublicKeyCredential:a.Tuple([a.Bytes({minLength:28,maxLength:28})])}),a.Object({ScriptCredential:a.Tuple([a.Bytes({minLength:28,maxLength:28})])})]),Ge=h,X=a.Object({paymentCredential:h,stakeCredential:a.Nullable(a.Enum([a.Object({Inline:a.Tuple([h])}),a.Object({Pointer:a.Tuple([a.Object({slotNumber:a.Integer(),transactionIndex:a.Integer(),certificateIndex:a.Integer()})])})]))}),Qe=X,A=a.Object({policyId:a.Bytes(),assetName:a.Bytes()}),Xe=A,Z=a.Map(a.Bytes(),a.Map(a.Bytes(),a.Integer())),Ze=Z,ee=a.Object({output_reference:I,input_index:a.Integer()}),O=ee,te=a.Enum([a.Literal("UpdateService"),a.Literal("RemoveService")]),C=te,re=a.Object({service_fee:A,service_fee_qty:a.Integer(),penalty_fee:A,penalty_fee_qty:a.Integer(),interval_length:a.Integer(),num_intervals:a.Integer(),minimum_ada:a.Integer(),is_active:a.Boolean()}),y=re;import{bytesToHex as ne,concatBytes as D,hexToBytes as N}from"@noble/hashes/utils";import{sha3_256 as se}from"@noble/hashes/sha3";var x={prefix100:"000643b0",prefix222:"000de140",prefix333:"0014df10",prefix444:"001bc280"},v=(e,t)=>{let r=se(N(e.txHash)),o=new Uint8Array([e.outputIndex]),n=D(r,o),s=D(N(t),n);return ne(s.slice(0,32))};import{Effect as T}from"effect";var P=e=>{let t=v(e,x.prefix100),r=v(e,x.prefix222);return{refTokenName:t,userTokenName:r}},At=async(e,t)=>{let r=await e.wallet().address(),o=f(e,t.scripts),n=M(o.mintServiceValidator);console.log("servicePolicyId: ",n);let s=await e.utxosAt(r);(!s||!s.length)&&console.error("No UTxO found at user address: "+r);let{refTokenName:i,userTokenName:c}=P(s[0]);console.log("refTokenName: ",i),console.log("userTokenName: ",c);let d={kind:"selected",makeRedeemer:l=>{let w={output_reference:{txHash:{hash:s[0].txHash},outputIndex:BigInt(s[0].outputIndex)},input_index:l[0]};return b.to(w,O)},inputs:[s[0]]};console.log("REDEEMER :: ",d);let S={service_fee:{policyId:"",assetName:""},service_fee_qty:10000000n,penalty_fee:{policyId:"",assetName:""},penalty_fee_qty:1000000n,interval_length:1n,num_intervals:12n,minimum_ada:2000000n,is_active:!0},m=b.to(S,y);console.log("merchantUTxOs :: ",s);let u={[`${n}${i}`]:1n,[`${n}${c}`]:1n};try{let l=await e.newTx().collectFrom(s).mintAssets(u,d).pay.ToAddress(r,{[`${n}${c}`]:1n}).pay.ToContract(o.mintServiceValAddress,{kind:"inline",value:m},{lovelace:1000000n,[`${n}${i}`]:1n}).validTo(Date.now()+9e5).attach.MintingPolicy(o.mintServiceValidator).complete();return console.log("data: ",l.toJSON()),{type:"ok",data:l}}catch(l){return console.log("ERROR: ",l),l instanceof Error?{type:"error",error:l}:{type:"error",error:new Error(`${JSON.stringify(l)}`)}}},Ot=async(e,t)=>T.gen(function*(){let r=yield*T.promise(()=>e.wallet().address()),o=f(e,t.scripts),n=M(o.mintServiceValidator);console.log("servicePolicyId in hex: ",n),console.log("policyId: "+oe(n));let s=yield*T.promise(()=>e.utxosAt(r));console.log("Merchant UTxO"),console.log(s),(!s||!s.length)&&console.error("No UTxO found at user address: "+r);let i=V(s,{lovelace:5000000n}),{refTokenName:c,userTokenName:d}=P(i[0]);console.log("refTokenName: ",c),console.log("userTokenName: ",d);let S={[`${n}${c}`]:1n,[`${n}${d}`]:1n},m={kind:"selected",makeRedeemer:H=>{let $={output_reference:{txHash:{hash:i[0].txHash},outputIndex:BigInt(i[0].outputIndex)},input_index:H[0]};return b.to($,O)},inputs:[i[0]]},u=yield*T.promise(()=>e.wallet().getUtxos()),l=V(u,{lovelace:BigInt(2e6)});return yield*e.newTx().collectFrom(i).mintAssets(S,m).pay.ToAddress(o.mintServiceValAddress,{[`${n}${c}`]:1n}).validTo(Date.now()+9e5).attach.MintingPolicy(o.mintServiceValidator).completeProgram()});import{Constr as B,Data as g,toUnit as L}from"@lucid-evolution/lucid";var zt=async(e,t)=>{console.log("updateService..........: ");let r=f(e,t.scripts),o=L("cbe8007737fc6a3376cad95dfce70a2c947a0502569d6b9e4fbcf9e9","000643b09e6291970cb44dd94008c79bcaf9d86f18b4b49ba5b2a04781db7199"),n=L("cbe8007737fc6a3376cad95dfce70a2c947a0502569d6b9e4fbcf9e9","000de1409e6291970cb44dd94008c79bcaf9d86f18b4b49ba5b2a04781db7199"),s=await e.utxosAtWithUnit(r.spendServiceValAddress,o);if(!s)throw new Error("Service NFT not found");console.log("serviceNFTUTxO: ",s);let i={service_fee:t.new_service_fee,service_fee_qty:t.new_service_fee_qty,penalty_fee:t.new_penalty_fee,penalty_fee_qty:t.new_penalty_fee_qty,interval_length:t.new_interval_length,num_intervals:t.new_num_intervals,minimum_ada:t.new_minimum_ada,is_active:t.is_active},c=g.to(i,y),d=g.to("UpdateService",C),S=g.to("RemoveService",C);console.log("Redeemer updateService: ",d);let m=g.to(new B(0,[new B(0,[])]));try{return{type:"ok",data:await e.newTx().collectFrom(s,m).pay.ToContract(r.spendServiceValAddress,{kind:"inline",value:c},{lovelace:3000000n,[o]:1n}).pay.ToAddress(t.merchantAddr,{[n]:1n}).attach.SpendingValidator(r.spendServiceValidator).complete()}}catch(u){return console.log("ERROR: ",u),u instanceof Error?{type:"error",error:u}:{type:"error",error:new Error(`${JSON.stringify(u)}`)}}};import{Data as ae,mintingPolicyToId as ie,toUnit as ce}from"@lucid-evolution/lucid";var Qt=36e5,Xt=315576e5,Zt=631152e5,er=864e5,tr=.05,rr=process.env.NODE_ENV=="emulator"?0:1e5,nr="014e9d57e1623f7eeef5d0a8d4e6734a562ba32cf910244cd74e1680",sr="5e8aa3f089868eaadf188426f49db6566624844b6c5d529b38f3b8a7";var le=e=>{let t=v(e,x.prefix100),r=v(e,x.prefix222);return{refTokenName:t,userTokenName:r}},_r=async(e,t)=>{console.log("sendTokenToService...");let r=f(e,t.scripts),o=ie(r.mintServiceValidator),n=await e.wallet().address(),s=await e.utxosAt(n),i=await e.utxosAt(r.spendServiceValAddress),{refTokenName:c,userTokenName:d}=le(s[0]);console.log("Service Validator Address: BEFORE>>>",r.spendServiceValAddress),console.log("Service Validator UTxO: BEFORE>>>",i);let S={service_fee:t.service_fee,service_fee_qty:t.service_fee_qty,penalty_fee:t.penalty_fee,penalty_fee_qty:t.penalty_fee_qty,interval_length:t.interval_length,num_intervals:t.num_intervals,minimum_ada:t.minimum_ada,is_active:t.is_active},m=ae.to(S,y),u=ce(o,c);console.log("PolicyId: ",o),console.log("refTokenName: ",c),console.log("userTokenName: ",d);try{return{type:"ok",data:await e.newTx().pay.ToContract(r.spendServiceValAddress,{kind:"inline",value:m},{lovelace:5000000n,[u]:1n}).complete()}}catch(l){return console.log("ERROR: ",l),l instanceof Error?{type:"error",error:l}:{type:"error",error:new Error(`${JSON.stringify(l)}`)}}};export*from"@lucid-evolution/lucid";export{Qe as AddressD,X as AddressSchema,Xe as AssetClass,A as AssetClassSchema,O as CreateServiceRedeemer,ee as CreateServiceSchema,Ge as CredentialD,h as CredentialSchema,te as MintAccountSchema,C as MintServiceRedeemer,Qt as ONE_HOUR_MS,Xt as ONE_YEAR_MS,ze as OutputReference,I as OutputReferenceSchema,tr as PROTOCOL_FEE,nr as PROTOCOL_PAYMENT_KEY,sr as PROTOCOL_STAKE_KEY,y as ServiceDatum,re as ServiceDatumSchema,rr as TIME_TOLERANCE_MS,er as TWENTY_FOUR_HOURS_MS,Zt as TWO_YEARS_MS,Ze as Value,Z as ValueSchema,Ie as chunkArray,At as createService,Ot as createServiceEffect,Ne as divCeil,ke as fromAddress,Ue as fromAddressToData,Me as fromAssets,Re as generateAccountSeedPhrase,Le as getInputUtxoIndices,f as getServiceMultiValidator,Ce as ok,G as parseSafeDatum,be as parseUTxOsAtScript,$e as remove,De as replacer,Be as selectUtxos,_r as sendTokenToService,Q as sortByOutRefWithIndex,He as sumUtxoAssets,Ee as toAddress,Pe as toAssets,we as toCBORHex,Ve as union,zt as updateService,z as utxosAtScript};
